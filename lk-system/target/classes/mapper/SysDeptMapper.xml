<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lk.system.mapper.SysDeptMapper">

	<resultMap type="SysDept" id="SysDeptResult">
		<id     property="deptId"     column="dept_id"     />
		<result property="parentId"   column="parent_id"   />
		<result property="deptName"   column="dept_name"   />
		<result property="parentName" column="parent_name" />
		<result property="createBy"   column="create_by"   />
		<result property="createTime" column="create_time" />
		<result property="updateBy"   column="update_by"   />
		<result property="updateTime" column="update_time" />
	</resultMap>
	
	<sql id="selectDeptVo">
        select d.dept_id, d.parent_id, d.dept_name, d.create_by, d.create_time
        from sys_dept d
    </sql>

	<select id="selectDeptList" parameterType="SysDept" resultMap="SysDeptResult">
        <include refid="selectDeptVo"/>
        where 1=1
		<if test="deptId != null and deptId != 0">
			AND dept_id = #{deptId}
		</if>
        <if test="parentId != null ">
			AND parent_id = #{parentId}
		</if>
		<if test="deptName != null and deptName != ''">
			AND dept_name like concat(concat('%',#{deptName}),'%')
		</if>

		<!-- ${params.dataScope}数据范围过滤 -->

		order by d.parent_id
    </select>
	
	<insert id="insertDept" parameterType="SysDept">
	    <selectKey keyProperty="deptId" order="BEFORE" resultType="Long">
			select seq_sys_dept.nextval as deptId from DUAL
		</selectKey>
 		insert into sys_dept(
 			<if test="deptId != null and deptId != 0">dept_id,</if>
 			<if test="parentId != null">parent_id,</if>
 			<if test="deptName != null and deptName != ''">dept_name,</if>
 			<if test="createBy != null and createBy != ''">create_by,</if>
 			create_time
 		)values(
 			<if test="deptId != null and deptId != 0">#{deptId},</if>
 			<if test="parentId != null">#{parentId},</if>
 			<if test="deptName != null and deptName != ''">#{deptName},</if>
 			<if test="createBy != null and createBy != ''">#{createBy},</if>
 			sysdate
 		)
	</insert>
	
	<update id="updateDept" parameterType="SysDept">
 		update sys_dept
 		<set>
 			<if test="parentId != null and parentId != 0">parent_id = #{parentId},</if>
 			<if test="deptName != null and deptName != ''">dept_name = #{deptName},</if>
 			<if test="updateBy != null and updateBy != ''">update_by = #{updateBy},</if>
 			update_time = sysdate
 		</set>
 		where dept_id = #{deptId}
	</update>

	<delete id="deleteDeptById" parameterType="Long">
		delete sys_dept where dept_id = #{deptId}
	</delete>

	<update id="updateUserDept" parameterType="Long">
		update sys_user set dept_id = #{deptId} where user_id in
		<foreach collection="userIds" item="userId" open="(" separator="," close=")">
			#{userId}
		</foreach>
	</update>

	<delete id="deleteUserAllDeptId" parameterType="Long">
		update sys_user set dept_id = '' where  dept_id = #{deptId}
	</delete>
</mapper> 