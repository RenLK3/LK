<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lk.system.mapper.SysMessageMapper">

    <resultMap type="SysMessage" id="SysMessageResult">
        <result property="userId" column="user_id"/>
        <result property="noticeId" column="notice_id"/>
        <result property="updateTime" column="update_time"/>
    </resultMap>

    <resultMap type="SysNotice" id="SysNoticeResult">
        <id property="noticeId" column="notice_id"/>
        <result property="name" column="name"/>
        <result property="title" column="title"/>
        <result property="content" column="content"/>
        <result property="status" column="status"/>
        <result property="createBy" column="create_by"/>
        <result property="createTime" column="create_time"/>
        <result property="updateBy" column="update_by"/>
        <result property="updateTime" column="update_time"/>
        <result property="remark" column="remark"/>
        <!--		<association property="dept"    column="dept_id" javaType="SysDept" resultMap="deptResult" />-->
        <!--		<collection  property="roles"   javaType="java.util.List"        resultMap="RoleResult" />-->
    </resultMap>


    <select id="selectUnreadMessageSize" parameterType="Long" resultType="java.lang.Integer">
        select count(*)
        from sys_message_unread u
        where user_id= #{userId}
    </select>

    <select id="selectMessageUnreadList" parameterType="SysNotice" resultMap="SysNoticeResult">
        select notice_id,
        name,
        title,
        content,
        type,
        status,
        create_by,
        create_time,
        update_by,
        update_time,
        remark
        from sys_notice n where notice_id in
        (
        select notice_id from sys_message_unread u
        where 1=1
        <if test="noticeId != null and noticeId != 0">
            AND u.notice_id = #{noticeId}
        </if>
        <if test="userId != null and userId != 0">
            AND u.user_id = #{userId}
        </if>
        )
    </select>

    <select id="selectMessageReadList" parameterType="SysNotice" resultMap="SysNoticeResult">
        select notice_id,
        name,
        title,
        content,
        type,
        status,
        create_by,
        create_time,
        update_by,
        update_time,
        remark
        from sys_notice n where notice_id in
        (
        select notice_id from sys_message_read u
        where 1=1
        <if test="noticeId != null and noticeId != 0">
            AND u.notice_id = #{noticeId}
        </if>
        <if test="userId != null and userId != 0">
            AND u.user_id = #{userId}
        </if>
        )
    </select>

    <insert id="insertUnreadMessageList" useGeneratedKeys="false"  >
        insert all
        <foreach item="item" index="index" collection="list">
            into sys_message_unread (user_id, notice_id,update_time) values (#{item.userId}, #{item.noticeId}, sysdate)
        </foreach>
        SELECT 1 FROM DUAL
    </insert>

    <update id="updateReadMessage" parameterType="SysMessage">
        insert into sys_message_read (USER_ID, NOTICE_ID, UPDATE_TIME)
        select USER_ID, NOTICE_ID, UPDATE_TIME
        from sys_message_unread
        where USER_ID = #{userId}
          and notice_id = #{noticeId}
    </update>

    <update id="updateReadMessageByUserId" parameterType="Long">
        insert into sys_message_read (USER_ID, NOTICE_ID, UPDATE_TIME)
        select USER_ID, NOTICE_ID, UPDATE_TIME
        from sys_message_unread
        where USER_ID = #{id}
    </update>

    <delete id="deleteReadMessageByUserId" parameterType="Long">
        delete
        sys_message_read where user_id=
        #{id}
    </delete>

    <delete id="deleteReadMessageList">
        delete sys_message_read where user_id in
        <foreach collection="list" index="index" item="message" open="(" separator="," close=")">
            #{message.userId}
        </foreach>
        and notice_id in
        <foreach collection="list" index="index" item="message" open="(" separator="," close=")">
            #{message.noticeId}
        </foreach>
    </delete>

    <delete id="deleteUnreadMessageByUserId" parameterType="Long">
        delete
        sys_message_unread where user_id=
        #{id}
    </delete>

    <delete id="deleteUnreadMessageList">
        delete sys_message_unread where user_id in
        <foreach collection="list" index="index" item="message" open="(" separator="," close=")">
            #{message.userId}
        </foreach>
        and notice_id in
        <foreach collection="list" index="index" item="message" open="(" separator="," close=")">
            #{message.noticeId}
        </foreach>
    </delete>
</mapper> 